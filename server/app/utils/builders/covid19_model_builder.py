# -*- coding: utf-8 -*-
"""covid19_notebook.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OZHLzblu-qsc2HFZUnpJz74qqfp0poFK

"""

# Import necessary libraries
import joblib
import pandas as pd
from sklearn.naive_bayes import GaussianNB
from sklearn.preprocessing import MinMaxScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split


# Read the dataset from the csv file
data = pd.read_csv("../data/covid19_dataset.csv")


# Specify the input features and the target variable
input_features = [
    "BreathingProblem",
    "Fever",
    "DryCough",
    "SoreThroat",
    "RunningNose",
    "Asthma",
    "ChronicLungDisease",
    "Headache",
    "HeartDisease",
    "Diabetes",
    "HyperTension",
    "Fatigue",
    "Gastrointestinal",
    "TravelAbroad",
    "ContactWithCOVIDPatient",
    "AttendedLargeGatherings",
    "VisitedExposedPublicPlaces",
    "FamilyWorkingInExposedPublicPlaces",
]
target_variable = "HasCovid19"


data_nontree = data.drop(target_variable, axis=1)


# Getting the target column at the end
data_nontree = pd.concat([data_nontree, data[target_variable]], axis=1)

feature_col_nontree = data_nontree.columns.to_list()
feature_col_nontree.remove(target_variable)

# Feature Scaling
scal = MinMaxScaler()
x_train = scal.fit_transform(data_nontree[feature_col_nontree].values)
y_train = data_nontree[target_variable]

joblib.dump(scal, "../models/covid19/minmax_scaler_non_tree.pkl")


# Prepare the data for training and testing
x = data[input_features].astype(int)
y = data[target_variable].astype(int)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.20)


# LOGISTIC REGRESSION
lg = LogisticRegression()
lg.fit(x_train, y_train)

joblib.dump(lg, "../models/covid19/logistic_regression.pkl")


# NAIVE BAYES
gnb = GaussianNB()
gnb.fit(x_train, y_train)

joblib.dump(gnb, "../models/covid19/naive_bayes.pkl")


# KNN
knn = KNeighborsClassifier(n_neighbors=15)
knn.fit(x_train, y_train)

joblib.dump(knn, "../models/covid19/knn.pkl")


# DECISION TREE
dt = DecisionTreeClassifier()
dt.fit(x_train, y_train)

joblib.dump(dt, "../models/covid19/decision_tree.pkl")


models = pd.DataFrame(
    {
        "Model": ["Logistic Regression", "Naive Bayes", "KNN", "Decision Tree"],
        "Score": [
            lg.score(x_test, y_test) * 100,
            gnb.score(x_test, y_test) * 100,
            knn.score(x_test, y_test) * 100,
            dt.score(x_test, y_test) * 100,
        ],
    }
)

print(models)

print("Done!")
